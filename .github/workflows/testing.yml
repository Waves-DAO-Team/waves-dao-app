name: Testing

# Run this workflow every time a new commit pushed to your repository
on: push

env:
  PRODUCTION: true
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  DOCKER_USERNAME: "_"
  DOCKER_TOKEN: ${{ secrets.HEROKU_API_KEY }}
  PROJECT: ${{ secrets.PROJECT }}
  TAG_MANAGER: ${{ secrets.TAG_MANAGER }}

  WORKING_GROUP: "" # Working group list
  MEMBERSHIP: "" # Address membership contract
  INTERHACK: "" # Address interhack contract
  INTERHACK_REWARD_ASSET: ""
  INTERHACK_REWARD_ASSET_ICON: ""
  INTERHACK_REWARD_DECIMALS=: ""
  WEB3: "" # Address web3 contract
  WEB3_REWARD_ASSET: ""
  WEB3_REWARD_ASSET_ICON: ""
  WEB3_REWARD_DECIMALS=: ""
  DISRUPTIVE: "" # Address disruptive contract
  DISRUPTIVE_REWARD_ASSET: ""
  DISRUPTIVE_REWARD_ASSET_ICON: ""
  DISRUPTIVE_REWARD_DECIMALS=: ""
  VOTINGS: "" # Address voting contract

  DISRUPTIVE_ISSUE_TEMPLATE: ${{ secrets.DISRUPTIVE_ISSUE_TEMPLATE }}
  VOTINGS_ISSUE_TEMPLATE: ${{ secrets.VOTINGS_ISSUE_TEMPLATE }}
  INTERHACK_ISSUE_TEMPLATE: ${{ secrets.INTERHACK_ISSUE_TEMPLATE }}
  WEB3_ISSUE_TEMPLATE: ${{ secrets.WEB3_ISSUE_TEMPLATE }}

  GRANT_PROGRAM_LINK: ${{ secrets.GRANT_PROGRAM_LINK }}
  DISRUPTIVE_ABOUT_LINK: $${{ secrets.DISRUPTIVE_ABOUT_LINK }}
  VOTINGS_ABOUT_LINK: ${{ secrets.VOTINGS_ABOUT_LINK }}
  WEB3_ABOUT_LINK: ${{ secrets.WEB3_ABOUT_LINK }}
  INTERHACK_ABOUT_LINK: ${{ secrets.INTERHACK_ABOUT_LINK }}

jobs:

  build:
    name: Testing code base
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set variables for environment
        uses: ./.github/set-env/
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set config
        uses: mshick/fast-envsubst@v1
        with:
          in-file: ./projects/dapp/src/environments/environment.ts
          out-file: ./projects/dapp/src/environments/environment.local.ts
      - run: yarn install
      - run: yarn build
      - run: yarn test:dapp
      - run: yarn test:ui
      - run: yarn test:services
        env:
          NODE_ENV: production
